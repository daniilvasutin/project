<project xmlns:ivy="antlib:org.apache.ivy.ant" name="WebAppBuilder" default="deploy" basedir="../../../" >
    <property file="src/main/resource/build.properties" />
    <ivy:settings file="${src.main.dir}/resource/ivysettings.xml" />

    <target name="bootstrap" description="Used to install the ivy task jar">
        <mkdir dir="${user.home}/.ant/lib"/>
        <get dest="${user.home}/.ant/lib/ivy.jar"
             src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/2.2.0/ivy-2.2.0.jar"/>
    </target>

    <target name="beep">
        <echo>\0007</echo>
    </target>

    <target name="resolve" >
        <ivy:resolve file="src/main/resource/ivy.xml" />
        <ivy:retrieve pattern="src/main/webapp/WEB-INF/lib/[conf]/[artifact]-[revision].[ext]"/>
    </target>

    <target name="clean">
        <echo>Cleaning the ${build.dir}</echo>
        <delete dir="${build.dir}"/>
    </target>

    <target name="init" depends="clean">
        <echo>Creating the build directory</echo>
        <mkdir dir="${build.dir}/WEB-INF/classes"/>
        <mkdir dir="${build.dir}/WEB-INF/lib"/>
    </target>

    <target name="compile" depends="init,resolve"><!--resolve-->
        <echo>Compile the source files</echo>
        <path id="classpath">
            <fileset dir="${src.main.dir}/webapp/WEB-INF/lib/hibernate" includes="*.jar" />
            <fileset dir="${src.main.dir}/webapp/WEB-INF/lib/servlet" includes="*.jar" />
        </path>

        <javac srcdir="${src.main.dir}/java" destdir="${build.dir}/WEB-INF/classes">
            <classpath refid="classpath"/>
        </javac>
    </target>

    <target name="copy" depends="compile">
        <copy todir="${build.dir}">
            <fileset dir="${src.main.dir}/webapp"/>
        </copy>

        <move todir="build/WEB-INF/lib">
            <fileset dir="build/WEB-INF/lib/hibernate" includes="*.jar"/>
            <fileset dir="build/WEB-INF/lib/servlet" includes="*.jar"/>
            <fileset dir="build/WEB-INF/lib/jetty" includes="*.jar"/>
            <!--<fileset dir="build/WEB-INF/lib/newhiber" includes="*.jar"/>-->
        </move>

        <delete dir="build/WEB-INF/lib/hibernate"/>
        <delete dir="build/WEB-INF/lib/servlet"/>
        <delete dir="build/WEB-INF/lib/jetty"/>
        <delete dir="build/META-INF"/>
        <!--<delete dir="build/WEB-INF/lib/newhiber"/>-->

        <copy todir="${build.dir}/WEB-INF/classes" file="${src.main.dir}/resource/hibernate.cfg.xml"/>
        <copydir dest="${build.dir}/WEB-INF/classes/META-INF" src="${src.main.dir}/webapp/META-INF"/>
    </target>

    <target name="war" depends="copy">
        <echo>Building the war file</echo>
        <war destfile="${dist.dir}/${project.name}.war" webxml="${build.dir}/WEB-INF/web.xml">
            <fileset dir="${build.dir}"/>
        </war>
    </target>

    <!--Start-stop-deploy-tomcat-->
    <path id="tomcat.class.path">
        <fileset dir="${tomcat.home}/lib">
            <include name="**/*.jar"/>
            <include name="**/*.zip"/>
        </fileset>
        <pathelement location="${tomcat.home}/bin/bootstrap.jar"/>
        <pathelement location="${tomcat.home}/bin/tomcat-juli.jar"/>
    </path>

    <target name="tomcat-start">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="true"
              classpathref="tomcat.class.path">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
        </java>
    </target>

    <target name="tomcat-stop" depends="tomcat-check-status" if="tomcat.started">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="true"
              classpathref="tomcat.class.path">
            <jvmarg value="-Dcatalina.home=${tomcat.home}"/>
            <arg line="stop"/>
        </java>
    </target>

    <target name="tomcat-check-status">
        <condition property="tomcat.started">
            <socket server="localhost" port="8080"/>
        </condition>
    </target>

    <target name="deploy" depends="war">
        <sequential>
            <antcall target="tomcat-stop"/>
            <delete dir="${tomcat.home}/webapps/${dist.context}" failonerror="false"/>
            <copy file="${dist.dir}/${dist.filename}" todir="${tomcat.home}/webapps"/>
            <antcall target="tomcat-start"/>
        </sequential>
    </target>

    <!--jetty-->
    <target name="jetty.run" depends="war">
        <path id="jetty.plugin.classpath">
            <fileset dir="src/main/webapp/WEB-INF/lib/jetty" includes="*.jar"/>
        </path>
        <taskdef classpathref="jetty.plugin.classpath" resource="tasks.properties" loaderref="jetty.loader"/>
        <typedef name="selectChannelConnector" classname="org.eclipse.jetty.server.nio.SelectChannelConnector"
                 classpathref="jetty.plugin.classpath" loaderref="jetty.loader"/>



        <jetty tempDirectory="jetty-temp">
            <connectors>
                <selectChannelConnector port="9090"/>
            </connectors>
            <webapp name="webapp" warfile="dist/project.war" contextpath="/" scanintervalseconds="2">
                <scantargets dir="jetty-temp">
                   <include name="**"/>
                </scantargets>
            </webapp>
        </jetty>
    </target>

    <!--fast-jetty-->
    <!--<target name="jetty.fast.run">-->
        <!--<delete dir="${build.dir}"/>-->
        <!--<mkdir dir="${build.dir}/WEB-INF/classes"/>-->
        <!--<mkdir dir="${build.dir}/WEB-INF/lib"/>-->
        <!--<path id="classpath">-->
            <!--<fileset dir="${src.main.dir}/webapp/WEB-INF/lib/hibernate" includes="*.jar" />-->
            <!--<fileset dir="${src.main.dir}/webapp/WEB-INF/lib/servlet" includes="*.jar" />-->
        <!--</path>-->

        <!--<javac srcdir="${src.main.dir}/java" destdir="${build.dir}/WEB-INF/classes">-->
            <!--<classpath refid="classpath"/>-->
        <!--</javac>-->
    <!--</target>-->
</project>